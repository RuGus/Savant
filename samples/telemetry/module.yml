# module name, required
name: ${oc.env:MODULE_NAME, 'telemetry-demo'}

# base module parameters
parameters:
  batch_size: 1
  output_frame:
    codec: ${oc.env:CODEC, 'h264'}

  # We use the default telemetry parameters,
  # which can be configured with environment variables in Docker compose manifests.
  #
  # Optionally, you can override them here.
  telemetry:
    tracing:
      # Sampling period in frames
      sampling_period: ${oc.decode:${oc.env:TRACING_SAMPLING_PERIOD, 100}}
      # Append frame metadata to telemetry span
      append_frame_meta_to_span: ${oc.decode:${oc.env:TRACING_APPEND_FRAME_META_TO_SPAN, False}}
      # Name for root span
      root_span_name: ${oc.decode:${oc.env:TRACING_ROOT_SPAN_NAME, null}}
      # Telemetry provider name
      provider: ${oc.decode:${oc.env:TRACING_PROVIDER, null}}
      # Parameters for telemetry provider
      provider_params:
        # Endpoint for telemetry provider
        endpoint: ${oc.decode:${oc.env:TRACING_PROVIDER_ENDPOINT, null}}
        # Protocol for telemetry provider
        protocol: ${oc.decode:${oc.env:TRACING_PROVIDER_PROTOCOL, null}}
        # TLS configuration for telemetry provider
        tls: ${json:${oc.env:TRACING_PROVIDER_TLS, null}}

# pipeline definition
pipeline:
  elements:
    # simple pyfunc blurring frames
    - element: pyfunc
      module: samples.telemetry.blur
      class_name: Blur
